<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>70 种 ChatGPT 搞钱攻略【下篇】</title>
    <link href="/2023/04/08/70-%E7%A7%8D-ChatGPT-%E6%90%9E%E9%92%B1%E6%94%BB%E7%95%A5%E3%80%90%E4%B8%8B%E7%AF%87%E3%80%91/"/>
    <url>/2023/04/08/70-%E7%A7%8D-ChatGPT-%E6%90%9E%E9%92%B1%E6%94%BB%E7%95%A5%E3%80%90%E4%B8%8B%E7%AF%87%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="70-种-ChatGPT-搞钱攻略【下篇】"><a href="#70-种-ChatGPT-搞钱攻略【下篇】" class="headerlink" title="70 种 ChatGPT 搞钱攻略【下篇】"></a>70 种 ChatGPT 搞钱攻略【下篇】</h1><blockquote></blockquote><h2 id="46、写文章"><a href="#46、写文章" class="headerlink" title="46、写文章***"></a>46、写文章***</h2><p>写商业热点文章、小红书文章、自媒体文章、跨境电商文章、朋友圈文章等。这个文章不止这几个，其实有很多种，需要哪类就写哪类。</p><p><img src="/../images/image-20230408230820643.png" alt="image-20230408230820643"></p><h2 id="47、做直播"><a href="#47、做直播" class="headerlink" title="47、做直播***"></a>47、做直播***</h2><p>有人使用数字人和 ChatGPT 做直播，甚至还能够进行互动，估计 ChatGPT也能改变直播的行业了。再继续发展下去，以后直播的时候，看到的人不知道是真是假了。</p><p><img src="/../images/image-20230408231547672.png" alt="image-20230408231547672"></p><h2 id="48、写程序"><a href="#48、写程序" class="headerlink" title="48、写程序"></a>48、写程序</h2><p>ChatGPT 很不可思议，甚至可以写程序，还能审程序错误，重复循环，最终编写一段完整的程序，效率极高。</p><p>采用java语言写一个断点续传组件</p><h2 id="49、讲故事"><a href="#49、讲故事" class="headerlink" title="49、讲故事***"></a>49、讲故事***</h2><p>已经有做教育的人，通过 ChatGPT 产生的故事文案，加上自己上镜，开始做自媒体短视频了。有了ChatGPT，就算是从零开始做一个自媒体都是能够实现。一次做10个账号，就算是起来 5个账号，一个账号一个月赚个1万块，5个账号一个月就是5万块的收入。</p><p><img src="/../images/image-20230408233528636.png" alt="image-20230408233528636"></p><h2 id="50、聊天机器人"><a href="#50、聊天机器人" class="headerlink" title="50、聊天机器人***"></a>50、聊天机器人***</h2><p>就是接入 APl，搭建成智能聊天机器人，与自动客服类似，只是应用领域不太一样，这个更多的是陪聊。</p><p>如何利用ChatGIT搭建聊天机器人</p><p><img src="/../images/luzhi.gif" alt="luzhi"></p><h2 id="51、做音频"><a href="#51、做音频" class="headerlink" title="51、做音频***"></a>51、做音频***</h2><p>ChatGPT 的文字生成能力，故事生成能力超强，可以生成大量的内容。<strong>再加上配音神器，直接生成音频，然后上传到喜马拉雅等平台，去变现。</strong></p><p>写段音乐简谱</p><p><img src="/../images/luzhi2.gif" alt="luzhi2"></p><h2 id="52、传播文档"><a href="#52、传播文档" class="headerlink" title="52、传播文档***"></a>52、传播文档***</h2><p>这个就是自己將网上搜索到的跟 ChatGPT 有关的有价值的链接，汇总写到飞书上面。然后通过全网的各种渠道传播，能够让大家访问到你的链接。同时文档里面贴上你的专栏收费二维码，这样看到的人多了之后，感兴趣的就会进行付费。</p><p>如何把链接汇总到飞书文档后再全网传播赚钱</p><p><img src="/../images/luzhi3.gif" alt="luzhi3"></p><h2 id="53、租-Plus-号"><a href="#53、租-Plus-号" class="headerlink" title="53、租 Plus 号***"></a>53、租 Plus 号***</h2><p>之前咱们说过卖普通号，缺点就是不稳定，米国白天咱们这边就是晚上，属于高峰时段（注册过 2 亿人次）很容易断。而 Pus 号，这个是每月135 元专线，通道更稳定更快，新功能也能提前使用。咱们说过卖 Plus号，而这个租 Plus号主要是针对普通号与 PIus 号之间需求的用户，就像拼单一样。一个账号价格是每天 4块多的成本，可以赚一倍，可以多账号操作，只是这个风险也大要谨慎。</p><p><img src="/../images/image-20230408234420576.png" alt="image-20230408234420576"></p><h2 id="54、代写"><a href="#54、代写" class="headerlink" title="54、代写***"></a>54、代写***</h2><p>咱们之前说过可以自己用 ChatGPT 来写文章，增长自己的公域粉丝。这个就是帮助别人写文章。因为有不少用户知道虽然<strong>知道 ChatGPT， 但是不会用，却也想体验</strong>。而且咱们能高效率的输出，价格也不高，比如一篇5块这样。当然去视频平台，也可以进行在线直播答题。</p><p>如何利用ChatGPT帮别人代写文章赚钱</p><h2 id="56、海量问答"><a href="#56、海量问答" class="headerlink" title="56、海量问答***"></a>56、海量问答***</h2><p>咱们之前说过专业领域问答，主要是为了建立垂直 IP。这个海量问答的逻辑是用极客等工具搜索热点问题，尤其是观看多而回答少的问题，不论专业是否垂直，多账号操作，每天回答到账号的极限，快速吸粉。</p><p>如何利用ChatGPT做海量极限问答赚钱</p><h2 id="57、企业起名"><a href="#57、企业起名" class="headerlink" title="57、企业起名"></a>57、企业起名</h2><p>之前说过给人起名，这个类似就是那些设计公司，可以借助 ChatGPT 提供灵感，给企业起名或者口号标语，延伸到 Al绘画一起配合使用，还可以出商标 LOGO，而且有些 LOGO 相当的惊艳，可以批量出了之后挑选。</p><p>如何利用ChatGPT给企业起名及设计LOGO</p><h2 id="58、资格证"><a href="#58、资格证" class="headerlink" title="58、资格证"></a>58、资格证</h2><p>以后要是有提示工程师、投喂工程师等岗位了，那自然也会有相关的培训机构，甚至还有可能有职称，从业资格这些，咱们有能力的可以提前布局。</p><p>如何考取提示工程师、投喂工程师等岗位的资格证</p><h2 id="59、卖赚钱视頻"><a href="#59、卖赚钱视頻" class="headerlink" title="59、卖赚钱视頻***"></a>59、卖赚钱视頻***</h2><p>这个就是做直播，然后给录 下来，给你看他是怎么引流，什么话术，怎么赚钱，然后把视频卖给你。其实也是买课程的一种，只是算是流量很大很暴力的一种。</p><p>如何通过ChatGPT卖教人赚钱的视频赚钱</p><h2 id="60、卖自家货"><a href="#60、卖自家货" class="headerlink" title="60、卖自家货"></a>60、卖自家货</h2><p>因为现在 ChatGPT 是个热点，所以搜索量很大，很多人蹭这个热点，还在前期的红利期，比如说什么免费指导注册之类的，反正是先给你拉过来，然后再做淘客、微商优惠券返利那一套生意。</p><p>如何通过利用ChatGPT卖自家的货品</p><h2 id="61、快逮引流"><a href="#61、快逮引流" class="headerlink" title="61、快逮引流***"></a>61、快逮引流***</h2><p>这个其实不是为了马上赚钱，更多的是为了引流到私域，因为目前是个窗口期，谁也不知道哪天突然就会出台更严格的制度给封了，所以先引流过来，以后慢慢转化，比如建一个免费的星球，公众号之类的。</p><p>如何利用ChatGPT快速引流到不域</p><h2 id="62、出海赚钱"><a href="#62、出海赚钱" class="headerlink" title="62、出海赚钱"></a>62、出海赚钱</h2><p>咱们好多人是由于知道了 ChatGPT，才接触了外面的世界，所以咱们也可以顺带着出海赚外国人的钱。</p><p>如何利用ChatGPT出海赚外快</p><h2 id="63、商品推荐"><a href="#63、商品推荐" class="headerlink" title="63、商品推荐***"></a>63、商品推荐***</h2><p>自媒体要么是人带货，要么是货带人。之前说过的大多数写文案都是人带货，当然也可以货带人。怎么带呢，就是像那些知乎或者视频平台的测评达人、好物分享号那样，通过对货物的详细描述、润色和对比进行商品推荐，自然能够更快的大批量的出文案、视频做起来速度也更快了。</p><p>如何利用ChatGPT做好物推荐赚钱</p><h2 id="64、国内模型"><a href="#64、国内模型" class="headerlink" title="64、国内模型"></a>64、国内模型</h2><p>由于 ChatGPT 的出现，国内有实力的公司，尤其是搜索类的都会很着急出台自己的产品。这个技术含量很高，基本都是科学家级别的在搞，咱们可以先关注一下，等出来产品之后，后面是否会出来不少相应的比如维护、调试、投喂、算力之类的兼职。</p><p>国内外类似ChatGPT的语言模型都有哪些</p><h2 id="65、交友"><a href="#65、交友" class="headerlink" title="65、交友***"></a>65、交友***</h2><p>想找另一半的，以前网聊的时候需要自己编笑话、 情话、嘘寒问暖之类的，难倒了技术宅。现在咱们有了这个小助理，那肯定是对答如流，贴心到底了。正所谓找到好的另一半，等于少付出十年。当然咱们也得提高自己水平，真心实意，别搞骗人那套。</p><p>如何利用ChatGPT提高自己与异性朋友的交往能力</p><h2 id="66、智能硬件"><a href="#66、智能硬件" class="headerlink" title="66、智能硬件"></a>66、智能硬件</h2><p>跟上面说的数字人、聊天机器人的应用场景不一样，可以结合5G、6G、物联网等技术做智能硬件。比如各种垂直领域的专业机器人，可以通过不断的调教训练，能解决具体的专业问题。</p><p>如何将ChatGPT与智能硬件结合？</p><h2 id="67、取代人类"><a href="#67、取代人类" class="headerlink" title="67、取代人类"></a>67、取代人类</h2><p>其实变现方法千万种，总结起来也不多，写到最后就逗大家一乐吧。也许不久的将来咱们都被机器人压榨的没有生存空间需要殖民外星球了，也许像黑客帝国那样都躺着进元宇宙里面玩去了。</p><p>出现了ChatGPT会取代人类吗</p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>在当今数字化的时代，副业赚钱已成为越来越普遍的选择。无论你是为了财务</p><p>上的额外支持，还是为了发展自己的技能和知识，利用 ChatGPT进行副业赚钱</p><p>都是一种值得尝试的方法。</p><p>然而，在副业赚钱过程中，需要时刻牢记自己的职业道德和责任，确保自己能够提供高质量的服务，以获得客户的信任和支持。同时，也需要不断学习和提高自己的技能和知识，以保持竞争力和市场价值。</p><p>总的来说，利用 ChatGPT 进行副业赚钱是一种值得推荐的方式，但需要谨慎对待，注重自身的发展和客户的需求，才能取得更好的效果和回报。</p><p>ChatGPT 的潘多拉魔盒既然已经打开，那人类肯定无法回到从前，这就是重新洗牌的时机，谁抓住了就能够弯道超车。不管怎样，不管能力多少，当下确实是咱们能小赚一笔的机会，希望大家都能通过 上面列的这些方法走通自己的商业闭环。不过也要提醒大家，不要太关注技巧，真正的提高自己才是根本之到。</p><p>后面等我找到更多的案例还会再出新的版本，如果您有任何意见建议请及时反馈给我，我是希望副业超赶超主业的亮亮。</p><p>谢谢支持</p>]]></content>
    
    
    <categories>
      
      <category>ChatGPT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>人工智能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何为 Nginx Https 续签免费 SSL 证书？</title>
    <link href="/2023/04/08/%E5%A6%82%E4%BD%95%E4%B8%BA-Nginx-Https-%E7%BB%AD%E7%AD%BE%E5%85%8D%E8%B4%B9-SSL-%E8%AF%81%E4%B9%A6%EF%BC%9F/"/>
    <url>/2023/04/08/%E5%A6%82%E4%BD%95%E4%B8%BA-Nginx-Https-%E7%BB%AD%E7%AD%BE%E5%85%8D%E8%B4%B9-SSL-%E8%AF%81%E4%B9%A6%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>系统预装了git和gcc，我们直接apt安装^nginx即可。apt安装的软件的配置文件都在 &#x2F;etc&#x2F;AppName下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install nginx<br></code></pre></td></tr></table></figure><p>现在Ubuntu系统的防火墙会阻止我们访问网站，因此，你需要放行iptables端口：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt update<br>sudo apt install iptables<br>sudo iptables -I INPUT -p tcp --dport 80 -j ACCEPT<br>sudo iptables -I INPUT -p tcp --dport 443 -j ACCEPT<br>sudo iptables -save<br><br></code></pre></td></tr></table></figure><p>这样设置的iptables会在重启之后失效，为了让iptables规则持久生效，安装iptables-persistent。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install iptables-persistent<br>sudo netfilter-persistent save<br>sudo netfilter-persistent reload<br><br></code></pre></td></tr></table></figure><p>现在，直接访问服务器的IP，就可以看到Nginx的欢迎界面了！</p><p>我们需要一个存着所有网页文件网站目录。我们先新建一个目录。如果你已经有网页文件，放到里面即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /home/www/hexo<br><br></code></pre></td></tr></table></figure><p>然后配置Nginx。Nginx可以在一台服务器上用同一个IP托管多个网站，其中&#x2F;etc&#x2F;nginx&#x2F;sites-available中存储所有可用的网站配置文件，每一个配置文件对应一个网站。在&#x2F;etc&#x2F;nginx&#x2F;sites-enabled中使用软链接指向sites-available中的配置文件，这里的配置文件才会被Nginx使用。这么做的好处是，可以通过添加&#x2F;删除软链接来管理哪些网站可以被访问，而无需触及真正的配置文件。</p><p>现在你可以删除sites-enabled中的 default配置文件的符号链接，防止网站访客看到Nginx的欢迎界面——否则会显得有点业余 :)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">rm /etc/nginx/sites-enabled/default<br><br></code></pre></td></tr></table></figure><p>接下来我们创建自己的配置文件。&#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;default这个文件就是我们刚删除的那个软链接对应的配置文件，它除了显示欢迎页面以外，还有作为“Server Block”配置参考的作用。“Server Block”就是Nginx的网站配置区块，配置起来很方便。接下来我们在sites-available中创建自己的配置文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/nginx/sites-available/gzblog<br><br></code></pre></td></tr></table></figure><p>在其中添加如下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">server &#123;<br>    listen 80;<br>    server_name www.gzblog.tech;<br>    location / &#123;<br>        root /home/www/hexo;<br>        index index.html;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>然后，在sites-enabled中添加指向它的符号链接来启用它。</p><p>sudo ln -s &#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;gzblog &#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;gzblog<br>80就是nginx的默认端口（apt安装nginx的时候会自动放行），server_name后面跟的是域名，多个域名之间用空格隔开，注意每行必须以英文分号结束。下面location &#x2F;的意思是以&#x2F;结尾的URL（也就是域名本身）的目录在&#x2F;home&#x2F;www&#x2F;hexo下面（我们刚刚创建了它）。如果需要托管多个网站，只需要像这样添加多个配置文件即可。这样，Nginx配置文件就编写好了。</p><p>现在我们检查一下配置文件是否存在语法错误。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo nginx -t<br><br></code></pre></td></tr></table></figure><p>如果输出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok<br>nginx: configuration file /etc/nginx/nginx.conf test is successful<br><br></code></pre></td></tr></table></figure><p>那就说明Nginx准备好了！接下来重启Nginx来应用配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo systemctl restart nginx<br><br></code></pre></td></tr></table></figure><p>安装Node.js和npm<br>在终端中输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install nodejs<br>sudo apt install npm<br><br></code></pre></td></tr></table></figure><p>配置 Git<br>这个部分参考的是一篇知乎上的文章，通过新建一个git用户的方式实现hexo自动部署。</p><p>添加名为”git” 的用户，这时除了密码，还会要求你填房间号、电话之类的，留空即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo adduser git<br><br></code></pre></td></tr></table></figure><p>修改git用户的权限为740</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo chmod 740 /etc/sudoers<br><br></code></pre></td></tr></table></figure><p>打开文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/sudoers<br><br></code></pre></td></tr></table></figure><p>在root下面添加git（模仿root的格式）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git    ALL=(ALL:ALL)    ALL<br><br></code></pre></td></tr></table></figure><p>把git用户的权限改回去</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod 400 /etc/sudoers<br><br></code></pre></td></tr></table></figure><p>接下来把本地的^公钥上传到服务器。首先，你得有一个公钥。如果你以前用过git，你可以在C:\user\YOURUSER.ssh下找到id_rsa.pub。如果没有，先生成。 在本地电脑上运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~<br>cd .ssh<br>ssh-keygen<br><br></code></pre></td></tr></table></figure><p>在FTP连接前，我们要先打开允许密码登录。在服务器上切换到root用户。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo su<br><br></code></pre></td></tr></table></figure><p>修改SSH配置文件，把PasswordAuthentication设为yes。为以后使用考虑，也可以把PermitRootLogin也设为yes。这样我们就可以使用密码连接FTP了，即使是root用户也可以。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/ssh/sshd_config<br><br></code></pre></td></tr></table></figure><p>然后重启服务器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">reboot<br><br></code></pre></td></tr></table></figure><p>请自行下载FileZilla软件，在主机项填写服务器IP，用户名填git，端口号填22。点击快速连接即可连接到远端服务器。</p><p>把本地的id_rsa.pub文件拖动到服务器的&#x2F;home&#x2F;git&#x2F;.ssh文件夹下。</p><p>回到服务器端，以 Git 用户身份在 .ssh 文件夹内新建 authorized_keys 文件，并将公钥内容拷贝到该文件中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/.ssh<br>cp id_rsa.pub authorized_keys<br>cat id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys<br><br></code></pre></td></tr></table></figure><p>修改文件权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod 600 ~/.ssh/authorized_keys<br>chmod 700 ~/.ssh<br><br></code></pre></td></tr></table></figure><p>由于Linux和Windows的文件尾不一样，为了防止出错，需要确保设置了正确的SELinux上下文。首先，安装必需的软件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt install policycoreutils<br><br></code></pre></td></tr></table></figure><p>然后运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">restorecon -Rv ~/.ssh<br>现在我们来测试一下是否设置成功。在本地任意位置右键打开Git Bash，输入：<br>```shell<br>ssh -v git@你的公网IP<br><br></code></pre></td></tr></table></figure><p>期间会问你要不要接收数字指纹，输入yes即可。如果出现Linux命令行界面，说明我们配置成功了。</p><p>接下来在服务端配置Git仓库。</p><p>在服务端切换到git用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">su git<br><br></code></pre></td></tr></table></figure><p>创建 post-receive 钩子文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~<br>git init --bare hexo.git<br>vim ~/hexo.git/hooks/post-receive<br><br></code></pre></td></tr></table></figure><p>输入以下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git --work-tree=/home/www/hexo --git-dir=/home/git/hexo.git checkout -f<br><br></code></pre></td></tr></table></figure><p>授予钩子文件可执行权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod +x ~/hexo.git/hooks/post-receive<br>cd ~<br>sudo chmod -R 777 /home/www/hexo<br><br></code></pre></td></tr></table></figure><p>重启服务器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">reboot<br><br></code></pre></td></tr></table></figure><p>这样，我们就完成了服务端的配置。</p><p>本地配置<br>安装 Node.js<br>到 Node.js 官网下载长期支持版。</p><p>输出版本号，测试是否安装成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">node -v<br>npm -v<br><br></code></pre></td></tr></table></figure><p>安装hexo<br>首先，找一个你喜欢的目录，在这里打开Git Bash，输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g hexo-cli<br><br></code></pre></td></tr></table></figure><p>在此目录下创建blog文件夹（你可以改成你喜欢的名字）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo init blog<br>cd blog<br>npm install<br><br></code></pre></td></tr></table></figure><p>这个文件夹就成为你博客的根目录。在blog文件夹打开Git Bash：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br>npm install hexo-server<br><br></code></pre></td></tr></table></figure><p>如果你还没有，配置Git全局变量：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global user.email &quot;你的邮箱@mail.com&quot;<br>git config --global user.name &quot;你的名字&quot;<br><br></code></pre></td></tr></table></figure><p>在根目录下打开Git bash，输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo server<br>或<br>hexo s<br><br></code></pre></td></tr></table></figure><p>这时终端会显示本地链接，一般是<a href="http://localhost:4000，打开它就能在本地预览博客。">http://localhost:4000，打开它就能在本地预览博客。</a></p><p>同步博客到服务端<br>进入本地计算机blog文件夹的根目录，找到_config.yml文件并打开。找到deploy行，将其修改为如下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">deploy:<br>  type: git<br>  repo:<br>    gcp: git@你的IP:/home/git/hexo.git<br>  branch: master<br><br></code></pre></td></tr></table></figure><p>此外，还可以找到url项将其修改为自己的域名。</p><p>激动人心的时刻到了！把博客推送到服务器！</p><p>如果使用git bash，实际上就是cmd，使用这个命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d<br><br></code></pre></td></tr></table></figure><p>如果使用现代得多、好用得多的PowerShell，用以下命令，主要是命令分隔符的不同：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo cl; hexo g; hexo d<br><br></code></pre></td></tr></table></figure><p>设置PowerShell Alias，简化命令<br>每次都要在本地博客文件夹下打开git bash或者Powershell再输入上面的命令未免太麻烦，接下来配置一下让我们输入hexo2themoon这个命令来一键推送。</p><p>打开PowerShell，输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo $PROFILE<br><br></code></pre></td></tr></table></figure><p>得到配置文件的路径与文件名。在里面输入以下内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> hexo2themoon &#123;cd <span class="hljs-string">&quot;C:\dev\blog&quot;</span>;hexo cl; hexo g; hexo d&#125;<br><br></code></pre></td></tr></table></figure><p>这会创建一个PowerShell函数，先切换到博客文件夹下，再执行推送文件的操作。</p><p>为了让PowerShell每次启动时都加载这个文件，用管理员模式打开PowerShell，输入命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">Set-ExecutionPolicy RemoteSigned<br><br></code></pre></td></tr></table></figure><p>重启PowerShell，大功告成！快去试试hexo2themoon命令吧！</p><p>进阶操作<br>配置HTTPS<br>使用cerbot配置比较简单。照着它网站上说的做就成了。</p><p>配置好后，运行cerbot获取证书并修改Nginx配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo certbot --nginx<br><br></code></pre></td></tr></table></figure><p>或只获取证书：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo certbot certonly --nginx<br><br></code></pre></td></tr></table></figure><p>在SSL证书到期前，输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo certbot renew<br><br></code></pre></td></tr></table></figure><p>即可续签所有证书。</p>]]></content>
    
    
    <categories>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>chatGPT 开启第四次工业革命？</title>
    <link href="/2023/04/08/chatGPT-%E5%BC%80%E5%90%AF%E7%AC%AC%E5%9B%9B%E6%AC%A1%E5%B7%A5%E4%B8%9A%E9%9D%A9%E5%91%BD%EF%BC%9F/"/>
    <url>/2023/04/08/chatGPT-%E5%BC%80%E5%90%AF%E7%AC%AC%E5%9B%9B%E6%AC%A1%E5%B7%A5%E4%B8%9A%E9%9D%A9%E5%91%BD%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="为什么说-ChatGPT-引爆第四次工业革命？"><a href="#为什么说-ChatGPT-引爆第四次工业革命？" class="headerlink" title="为什么说 ChatGPT 引爆第四次工业革命？"></a>为什么说 ChatGPT 引爆第四次工业革命？</h1><blockquote><p>如果看不懂当下，请回忆历史，因为曾经发生过。</p><p>如果忘记了历史，请看看当下，因为历史正在重演。</p><p>我问佛：何为对的人？</p><p>佛说：一见你 ，就笑的人；一见，你就笑的人！[合十]</p><p>百度宣布正在开发中文版ChatGPT语言模型“文心一言”，并于3月16日发布。该模型在创意写作、商业文案写作、数学推理、中文理解和多模式生成方面有潜力。在发布前，100多家中国公司和组织已同意集成该模型。据报道，腾讯已成立“混元助手”项目组，构建类似ChatGPT的大参数语言模型。</p></blockquote><h2 id="什么是-ChatGPT？"><a href="#什么是-ChatGPT？" class="headerlink" title="什么是 ChatGPT？"></a>什么是 ChatGPT？</h2><h3 id="ChatGPT-概念"><a href="#ChatGPT-概念" class="headerlink" title="ChatGPT 概念"></a>ChatGPT 概念</h3><p>ChatGPT （全名：Chat Generative Pre-trained Transformer)，美国 OpenAl 研发的聊天机器人程序，于 2022年11月30日发布。ChatGPT 是人工智能技术驱动的自然语言处理工具，它能够通过理解和学习人类的语言来进行对话，还能根据聊天的上下文进行互动，真正像人类一样来聊天交流，甚至能完成撰写邮件、视频脚本、文案、翻译、代码，写论文 等任务。2023年1月末，ChatGPT 的月活用户已突破1亿，成为史上增长最快的消费者应用。</p><p>从2019年开始，AI大模型突然爆发，参数规模以指数级的快速增长。从2014年到2018年，AI模型参数规模还在一亿的数量级上下浮动，2019年2月，OpenAI的GPT-2达到了15亿参数规模；2020年6月，GPT-3达到了1750亿参数的规模；2021年1月，谷歌大脑推出了1.6万亿参数规模超级模型，再次刷新规模纪录。</p><h3 id="ChatGPT-国内外技术布局及应用场景"><a href="#ChatGPT-国内外技术布局及应用场景" class="headerlink" title="ChatGPT 国内外技术布局及应用场景"></a>ChatGPT 国内外技术布局及应用场景</h3><p>一图了解当前国内外最先进的人工智能AI技术，包括芯片、深度学习框架、AI大模型等最新科技的发展趋势及应用场景：</p>]]></content>
    
    
    <categories>
      
      <category>ChatGPT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>配置ssl证书</title>
    <link href="/2022/11/23/%E9%85%8D%E7%BD%AEssl%E8%AF%81%E4%B9%A6/"/>
    <url>/2022/11/23/%E9%85%8D%E7%BD%AEssl%E8%AF%81%E4%B9%A6/</url>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs shell"><br>server &#123;<br>        server_name www.ringyin.com;   # managed by Certbot<br>        root         /usr/share/nginx/html;<br><br>        # Load configuration files for the default server block.<br>        include /etc/nginx/default.d/*.conf;<br><br>        location / &#123;<br>        &#125;<br><br>        error_page 404 /404.html;<br>            location = /40x.html &#123;<br>        &#125;<br><br>        error_page 500 502 503 504 /50x.html;<br>            location = /50x.html &#123;<br>        &#125;<br>    <br><br>    listen [::]:443 ssl ipv6only=on; # managed by Certbot<br>    listen 443 ssl; # managed by Certbot<br>    ssl_certificate /etc/letsencrypt/live/www.ringyin.com/fullchain.pem; # managed by Certbot<br>    ssl_certificate_key /etc/letsencrypt/live/www.ringyin.com/privkey.pem; # managed by Certbot<br>    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot<br>    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot<br>&#125;<br><br>server &#123;<br>    if ($host = www.ringyin.com) &#123;<br>        return 301 https://$host$request_uri;<br>    &#125; # managed by Certbot<br><br><br>    listen       80 ;<br>    listen       [::]:80 ;<br>    server_name www.ringyin.com;<br>    return 404; # managed by Certbot<br><br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>域名备案</title>
    <link href="/2022/11/23/%E5%9F%9F%E5%90%8D%E5%A4%87%E6%A1%88/"/>
    <url>/2022/11/23/%E5%9F%9F%E5%90%8D%E5%A4%87%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h1 id="买了域名一定要备案吗？"><a href="#买了域名一定要备案吗？" class="headerlink" title="买了域名一定要备案吗？"></a>买了域名一定要备案吗？</h1><blockquote><p>域名本身是无需备案的，但要实名认证，只有这个域名开通Web服务时才需要备案。<a href="http://tencent.yundashi168.com/180.html">http://tencent.yundashi168.com/180.html</a>　　</p></blockquote><h2 id="不需要备案"><a href="#不需要备案" class="headerlink" title="不需要备案"></a>不需要备案</h2><p>　　域名解析指向国外服务器或者中国香港服务器，不需要备案。</p><h2 id="需备要案"><a href="#需备要案" class="headerlink" title="需备要案"></a>需备要案</h2><p>　　域名指向国内服务器的网站必须备案。<br>　　域名作邮箱使用，通过“mail.域名”访问企业邮箱也需要备案。</p><p>1.买的域名用来做网站：如果使用国内主机或服务器建站，根据政策要求域名必须有对应的备案号；如果使用香港主机或海外主机，可以免备案。</p><p>2.买的域名用来作邮箱，无论使用国内或国外空间都不需要备案。</p><p>工信部要求网站域名备案目的在于，防止在网上从事非法的网站经营活动，打击不良互联网信息传播。信息产业部曾在第十二次部务会议审议通过《非经营性互联网信息服务备案管理办法》条例，要求在国内提供非经营性互联网信息服务，应当办理备案。</p><h2 id="域名备案的好处有："><a href="#域名备案的好处有：" class="headerlink" title="域名备案的好处有："></a>域名备案的好处有：</h2><p>1.提高网站空间在国内的访问速度；<br>2.使网站更正规，提升用户的信任度。</p><p>但买了域名做网站也可以不备案，例如某些用户不想走域名备案的系列流程，或者购买的某些顶级域名无法在国内备案，如.app&#x2F;.loan&#x2F;.win&#x2F;.men&#x2F;.bid&#x2F;.space等等，可以选择香港主机或海外空间进行绑定。</p><p>可靠的免备案主机有阿里云的香港主机和海外主机，特别适合外贸公司及急于开通网站的用户使用，安全稳定，可以实时开通管理。详情可到阿里云网站虚拟主机的免备案主机中了解。</p><p>问：阿里云香港服务器需要备案吗？</p><p>答：阿里云香港服务器不需要备案，购买后可直接使用。</p><p>很多人不清楚阿里云香港服务器是否需要备案，在这里明确的告诉大家，阿里云香港服务器不需要备案。购买后即可使用，没有任何限制。</p><p>不但阿里云香港服务器不需要备案，阿里云还有日本，新加坡，美国，东南亚等等所有的国外地区，都不需要备案。</p><p>如果你的网站主要是给国内地区用户使用，建议选择香港服务器，网速非常快，并且不需要备案。</p><p>如果你是做外贸的，或者网站是给国外用户使用，可根据网站用户所在地区，选择新加坡，日本，美国，德国，东南亚等国外地区。</p><p>问：香港服务器有哪些品牌，有什么推荐的吗？</p><p>答：香港服务器可以选择腾讯云(官网直达)，阿里云(官网直达)，UCloud云(官网直达)，华为云，金山云等等。其中腾讯云的免备案服务器性价比最好，其次是阿里云，UCloud云，当然还需要你自己多观察下它们几家的配置如何，价格如何。更多香港和海外服务器品牌与活动信息可以参考:国内外免备案服务器汇总</p><p>问：阿里云香港服务器国内用户能访问吗？</p><p>答：阿里云香港服务器国内用户百分之百能访问，这点大家不用怀疑，绝对能访问。</p><h2 id="为什么优先考虑香港主机？"><a href="#为什么优先考虑香港主机？" class="headerlink" title="为什么优先考虑香港主机？"></a>为什么优先考虑香港主机？</h2><p>香港免备案主机就是指机房位于香港地区的主机空间。随着越来越多的站长及企业开始建站，国内用户对香港免备案主机的需求也是越来越大，备受广大站长青睐。</p><p>香港免备案主机之所以非常受欢迎，是因为它有诸多的优势和好处，比较适用于各类网站建设需求。那么，租用香港免备案主机的究竟有哪些好处呢？</p><h3 id="第一、无备案好处"><a href="#第一、无备案好处" class="headerlink" title="第一、无备案好处"></a>第一、无备案好处</h3><p>顾名思义，香港免备案主机肯定就是无需备案的，与国内主机相比，将网站放置在香港免备案主机上面最直接的好处就是政策层面上的，无需进行网站备案。</p><p>对于国内主机来说，网站都是必须备案的，而且备案时间在20天左右，过程比较繁琐，网站必须先获得备案号才能被访问，所以很多站长嫌备案麻烦，所以很多人直接就选项香港免备案主机了。香港免备案主机建设网站无需备案，即买即用，而且内容放置管理的也比较宽松。</p><h3 id="第二、带宽资源好处"><a href="#第二、带宽资源好处" class="headerlink" title="第二、带宽资源好处"></a>第二、带宽资源好处</h3><p>香港带宽主要有香港本地带宽和国际带宽两种。香港本地带宽很充足，但仅限于香港本土访问速度较快。而目前香港免备案主机采用的大多是香港国际带宽，带宽资源相对来说也比较充足。</p><p>香港免备案主机采用国际带宽的好处就是不但大陆访问速度快，全球访问速度都比较快，因此也很适合外贸建站。需要注意的是，国际带宽价格昂贵，不适合大流量用户使用。大家在选择香港免备案主机的时候，可以根据网站规模以及实际用户流量来合理选择带宽大小，以此来提升租用性价比。</p><h3 id="第三、互通互访好处"><a href="#第三、互通互访好处" class="headerlink" title="第三、互通互访好处"></a>第三、互通互访好处</h3><p>国内一直有 “南电信、北网通”的问题存在，即电信网络访问网通线路主机非常慢，同样网络访问电信线路主机同样很慢，这样和不利于网站的优化和用户体验。但是，香港机房大多采用的是多线线路，所以租用香港免备案主机租用香港免备案主机就不会出现这种情况。</p><h3 id="第四、稳定性高优势"><a href="#第四、稳定性高优势" class="headerlink" title="第四、稳定性高优势"></a>第四、稳定性高优势</h3><p>香港政府有相关法律规定，香港服务器操作系统不能使用盗版软件，所以比较正规的香港机房基本都是使用正版软件，这对主机的稳定性和安全性都非常有好处。</p><p>据了解，香港免备案主机在速度上相对海外主机来说要快很多，但稳定性和海外主机相差不多，基本上比较正规的香港主机的在线率一般都保持在99%以上。</p><p>总之，对于国内站长而言，如果因为不想备案，那香港免备案主机应该是建站的首选。即使是外贸建站，接入国际</p><h2 id="使用免备案的香港主机对百度收录的影响"><a href="#使用免备案的香港主机对百度收录的影响" class="headerlink" title="使用免备案的香港主机对百度收录的影响"></a>使用免备案的香港主机对百度收录的影响</h2><p>做优化的站长都知道网站内容被百度收录才有可能参与排名，所以任何影响百度收录的因素站长都应该考虑。香港主机空间因为免备案受到国内很多个人站长的欢迎，但使用免备案的香港主机对百度收录有影响吗?</p><p>根据百度的站长帮助和优化指南，百度官方明确表示了搜索引擎对香港主机的态度：百度对香港站点没有歧视。但Baiduspider服务器在国内，国内普通用户访问受限的内容，Baiduspider一样会搞不定，只要国内能正常访问，我们就会一视同仁。</p><p>通过百度官方对香港等免备案主机空间的表态可以看到，搜索引擎不会因为你使用了香港等免备案空间就不抓取不排名，而是一视同仁的。所以在服务器稳定装态下，无论是使用香港主机还是使用国内主机，对百度收录都是一样的。</p><p>注意这里说的没有影响的前提是服务器得稳定，因为影响网站收录的原因有很多，其中就包括空间的稳定性。空间的稳定性往往对网站的收录有着很大影响，如果搜索引擎蜘蛛在爬取你的网站时因为空间关系打不开或者非常慢，那蜘蛛就无法顺利爬取你的网站，这就会丢失网站内容被收录的机会，从而降低网站的收录量。这里的空间既可能是国内主机，也可能香港和其他海外主机空间。</p><p>要想香港主机空间对百度收录的不利影响降到最低，就必须要租用稳定性高的主机空间。比较好的推荐有阿里云等大品牌的，这些香港主机速度稳定性都是非常不错的。</p><h2 id="疑问参考"><a href="#疑问参考" class="headerlink" title="疑问参考"></a>疑问参考</h2><p>阿里云开发者社区—买香港主机需要备案吗？</p>]]></content>
    
    
    <categories>
      
      <category>云服务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2022/11/22/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2022/11/22/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>这是一篇测试文章</p><img src="/2022/11/22/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/test.png" class="" title="图片引用方法一"><p>静态博客网站生成器jekyll、hexo和hugo如何选择？有什么区别？</p><p>sudo cp &#x2F;home&#x2F;ec2-user&#x2F;v2ray-3.05&#x2F;src&#x2F;* &#x2F;etc&#x2F;v2ray&#x2F;233boy&#x2F;v2ray&#x2F;src&#x2F;<br>sudo cp -rf &#x2F;home&#x2F;ec2-user&#x2F;v2ray-3.05&#x2F;config&#x2F;* &#x2F;etc&#x2F;v2ray&#x2F;233boy&#x2F;v2ray&#x2F;config&#x2F;<br>sudo cp -rf &#x2F;home&#x2F;ec2-user&#x2F;v2ray-3.05&#x2F;tools&#x2F;* &#x2F;etc&#x2F;v2ray&#x2F;233boy&#x2F;v2ray&#x2F;tools&#x2F;<br>sudo cp -rf &#x2F;home&#x2F;ec2-user&#x2F;v2ray-3.05&#x2F;templates&#x2F;* &#x2F;etc&#x2F;v2ray&#x2F;233boy&#x2F;v2ray&#x2F;templates&#x2F;</p><p>ERROR: This script has been DISCARDED, please switch to fhs-install-v2ray project.<br>HOW TO USE: <a href="https://github.com/v2fly/fhs-install-v2ray">https://github.com/v2fly/fhs-install-v2ray</a><br>TO MIGRATE: <a href="https://github.com/v2fly/fhs-install-v2ray/wiki/Migrate-from-the-old-script-to-this">https://github.com/v2fly/fhs-install-v2ray/wiki/Migrate-from-the-old-script-to-this</a></p><p>……….. V2Ray 一键安装脚本 &amp; 管理脚本 by v2ray6.com ……….</p><p>帮助说明: <a href="https://v2ray6.com/post/1/">https://v2ray6.com/post/1/</a></p><p>搭建教程: <a href="https://v2ray6.com/post/2/">https://v2ray6.com/post/2/</a></p><hr><p>是否配置 Shadowsocks [Y&#x2F;N]<br>(默认 [N]): y</p><p>请输入 Shadowsocks 端口 [1-65535]，不能和 V2Ray 端口相同<br>(默认端口: 26555): </p><h2 id="Shadowsocks-端口-x3D-26555"><a href="#Shadowsocks-端口-x3D-26555" class="headerlink" title=" Shadowsocks 端口 &#x3D; 26555"></a> Shadowsocks 端口 &#x3D; 26555</h2><p>请输入 Shadowsocks 密码</p><h2 id="Shadowsocks-密码-x3D"><a href="#Shadowsocks-密码-x3D" class="headerlink" title=" Shadowsocks 密码 &#x3D; ******"></a> Shadowsocks 密码 &#x3D; ******</h2><p>请选择 Shadowsocks 加密协议 [1-7]</p><ol><li><p>aes-128-cfb</p></li><li><p>aes-256-cfb</p></li><li><p>chacha20</p></li><li><p>chacha20-ietf</p></li><li><p>aes-128-gcm</p></li><li><p>aes-256-gcm</p></li><li><p>chacha20-ietf-poly1305</p></li></ol><p>(默认加密协议: chacha20-ietf-poly1305):</p><h2 id="Shadowsocks-加密协议-x3D-chacha20-ietf-poly1305"><a href="#Shadowsocks-加密协议-x3D-chacha20-ietf-poly1305" class="headerlink" title=" Shadowsocks 加密协议 &#x3D; chacha20-ietf-poly1305"></a> Shadowsocks 加密协议 &#x3D; chacha20-ietf-poly1305</h2><p>按 Enter 回车键 继续….或按 Ctrl + C 取消.</p><p> ….准备安装了咯..看看有毛有配置正确了…</p><p>———- 安装信息 ————-</p><p> V2Ray 传输协议 &#x3D; TCP</p><p> V2Ray 端口 &#x3D; 46038</p><p> Shadowsocks 端口 &#x3D; 26555</p><p> Shadowsocks 密码 &#x3D; kony1120</p><p> Shadowsocks 加密协议 &#x3D; chacha20-ietf-poly1305</p><p>———- END ————-</p><p>按 Enter 回车键 继续….或按 Ctrl + C 取消.</p><p>Loaded plugins: extras_suggestions, langpacks, priorities, update-motd<br>No packages marked for update<br>Loaded plugins: extras_suggestions, langpacks, priorities, update-motd<br>Package lrzsz-0.12.20-36.amzn2.0.2.x86_64 already installed and latest version<br>Package git-2.37.1-1.amzn2.0.1.x86_64 already installed and latest version<br>Package zip-3.0-11.amzn2.0.2.x86_64 already installed and latest version<br>Package unzip-6.0-43.amzn2.x86_64 already installed and latest version<br>Package curl-7.79.1-6.amzn2.0.1.x86_64 already installed and latest version<br>Package wget-1.14-18.amzn2.1.x86_64 already installed and latest version<br>Package qrencode-3.4.1-3.amzn2.0.2.x86_64 already installed and latest version<br>Package libcap-2.54-1.amzn2.0.1.x86_64 already installed and latest version<br>Nothing to do<br>Wed Nov 23 02:22:51 CST 2022<br>&#x2F;tmp &#x2F;home&#x2F;ec2-user&#x2F;v2ray-3.05<br>Cloning into ‘&#x2F;etc&#x2F;v2ray&#x2F;233boy&#x2F;v2ray’…<br>remote: Enumerating objects: 1674, done.<br>remote: Counting objects: 100% (14&#x2F;14), done.<br>remote: Compressing objects: 100% (7&#x2F;7), done.</p><p><img src="/images/test.png" alt="图片引用方法三"></p><h2 id="安装结果"><a href="#安装结果" class="headerlink" title="安装结果"></a>安装结果</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs shell">Downloading verification file for V2Ray archive: https://github.com/v2fly/v2ray-core/releases/download/v5.1.0/v2ray-linux-64.zip.dgst<br>info: Extract the V2Ray package to /tmp/tmp.mJ4GEpAHXR and prepare it for installation.<br>info: Systemd service files have been installed successfully!<br>warning: The following are the actual parameters for the v2ray service startup.<br>warning: Please make sure the configuration file path is correctly set.<br><span class="hljs-meta prompt_"># </span><span class="language-bash">/etc/systemd/system/v2ray.service</span><br>[Unit]<br>Description=V2Ray Service<br>Documentation=https://www.v2fly.org/<br>After=network.target nss-lookup.target<br><br>[Service]<br>User=nobody<br>CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_BIND_SERVICE<br>AmbientCapabilities=CAP_NET_ADMIN CAP_NET_BIND_SERVICE<br>NoNewPrivileges=true<br>ExecStart=/usr/local/bin/v2ray run -config /usr/local/etc/v2ray/config.json<br>Restart=on-failure<br>RestartPreventExitStatus=23<br><br>[Install]<br>WantedBy=multi-user.target<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">/etc/systemd/system/v2ray.service.d/10-donot_touch_single_conf.conf</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">In <span class="hljs-keyword">case</span> you have a good reason to <span class="hljs-keyword">do</span> so, duplicate this file <span class="hljs-keyword">in</span> the same directory and make your customizes there.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Or all changes you made will be lost!  <span class="hljs-comment"># Refer: https://www.freedesktop.org/software/systemd/man/systemd.unit.html</span></span><br>[Service]<br>ExecStart=<br>ExecStart=/usr/local/bin/v2ray run -config /usr/local/etc/v2ray/config.json<br><br>installed: /usr/local/bin/v2ray<br>installed: /usr/local/share/v2ray/geoip.dat<br>installed: /usr/local/share/v2ray/geosite.dat<br>installed: /usr/local/etc/v2ray/config.json<br>installed: /var/log/v2ray/<br>installed: /var/log/v2ray/access.log<br>installed: /var/log/v2ray/error.log<br>installed: /etc/systemd/system/v2ray.service<br>installed: /etc/systemd/system/v2ray@.service<br>removed: /tmp/tmp.mJ4GEpAHXR<br>info: V2Ray v5.1.0 is installed.<br>You may need to execute a command to remove dependent software: apt purge curl unzip<br>Please execute the command: systemctl enable v2ray; systemctl start v2ray<br>root@ip-172-31-46-95:/home/ubuntu# system enable v2ray<br>Command &#x27;system&#x27; not found, did you mean:<br>  command &#x27;systemd&#x27; from deb systemd (249.11-0ubuntu3.6)<br>  command &#x27;system3&#x27; from deb simh (3.8.1-6.1)<br>Try: apt install &lt;deb name&gt;<br></code></pre></td></tr></table></figure><h2 id="server-服务端配置"><a href="#server-服务端配置" class="headerlink" title="server 服务端配置"></a>server 服务端配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># vim /usr/local/etc/v2ray/config.json</span><br><br></code></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs json"><br><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;log&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;loglevel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;warning&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;routing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;domainStrategy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;AsIs&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;rules&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>            <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;ip&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                    <span class="hljs-string">&quot;geoip:private&quot;</span><br>                <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;block&quot;</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;inbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;listen&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1080</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;shadowsocks&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;method&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;chacha20-ietf-poly1305&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&#123;&#123; ******,, ******,, ******, &#125;&#125;&quot;</span><br>            <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;streamSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;network&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;grpc&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;grpcSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;serviceName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;michi&quot;</span><br>                <span class="hljs-punctuation">&#125;</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;outbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;freedom&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;direct&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;blackhole&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;block&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="client-客户端配置"><a href="#client-客户端配置" class="headerlink" title="client 客户端配置"></a>client 客户端配置</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;log&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;loglevel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;warning&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;routing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;domainStrategy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;AsIs&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;rules&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>            <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;ip&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                    <span class="hljs-string">&quot;geoip:private&quot;</span><br>                <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;direct&quot;</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;inbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;listen&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1080&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;socks&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;auth&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;noauth&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;udp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;ip&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;listen&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1081&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;http&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;outbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;shadowsocks&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                    <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&#123;&#123; host &#125;&#125;&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">443</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;method&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;chacha20-ietf-poly1305&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&#123;&#123; ******,, ******, ******, &#125;&#125;&quot;</span><br>                    <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">]</span><br>            <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;streamSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;network&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;grpc&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;security&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tls&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;grpcSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;serviceName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;michi&quot;</span><br>                <span class="hljs-punctuation">&#125;</span><br>            <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;proxy&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;freedom&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;direct&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br><br><br>## 获取并生成ssl证书<br><br></code></pre></td></tr></table></figure><p>letsencrypt certonly –standalone –email <a href="mailto:&#x6b;&#111;&#x6e;&#121;&#108;&#101;&#101;&#x40;&#102;&#111;&#120;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#109;">&#x6b;&#111;&#x6e;&#121;&#108;&#101;&#101;&#x40;&#102;&#111;&#120;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#109;</a> -d <a href="http://www.ringyin.com/">www.ringyin.com</a></p><p>Successfully received certificate.<br>Certificate is saved at: &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;<a href="http://www.ringyin.com/fullchain.pem">www.ringyin.com/fullchain.pem</a><br>Key is saved at:         &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;<a href="http://www.ringyin.com/privkey.pem">www.ringyin.com/privkey.pem</a><br>This certificate expires on 2023-02-21.<br>These files will be updated when the certificate renews.<br>Certbot has set up a scheduled task to automatically renew this certificate in the background.</p><hr><p>If you like Certbot, please consider supporting our work by:</p><ul><li>Donating to ISRG &#x2F; Let’s Encrypt:   <a href="https://letsencrypt.org/donate">https://letsencrypt.org/donate</a></li><li>Donating to EFF:                    <a href="https://eff.org/donate-le">https://eff.org/donate-le</a></li></ul><hr><p>安装完成后，添加一个配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/nginx/conf.d/v2ray.conf<br><br></code></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs shell"><br> server &#123;<br>   listen                     443 ssl;<br>   ssl                        on;<br>   server_name                www.ringyin.com;<br>   ssl_certificate            /etc/letsencrypt/live/www.ringyin.com/fullchain.pem;<br>   ssl_certificate_key        /etc/letsencrypt/live/www.ringyin.com/privkey.pem;<br>   ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;<br>   ssl_ciphers                HIGH:!aNULL:!MD5;<br> <br>  location /PATH &#123;<br>    proxy_redirect           off;<br>    proxy_pass               http://127.0.0.1:42348;<br>    proxy_http_version       1.1;<br>    proxy_set_header         Upgrade $http_upgrade;<br>    proxy_set_header         Connection &quot;upgrade&quot;;<br>    proxy_set_header         Host $http_host;<br>    proxy_set_header         X-Real-IP $remote_addr;<br>    proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for;<br>  &#125;<br><br>  access_log                /var/log/nginx-v2ray-access.log;<br>  error_log                 /var/log/nginx-v2ray-error.log;<br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p>其中需要更改的有：<br>第 4、5、6 行的域名：使用自己的域名<br>第 10 行的路径：可以任意用一个单词，只要和 v2ray 中的一样即可</p></blockquote><p>然后新建日志文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">touch /var/log/nginx-v2ray-access.log;<br>touch /var/log/nginx-v2ray-error.log;<br>chown nginx:nginx /var/log/nginx-v2ray-access.log;<br>chown nginx:nginx /var/log/nginx-v2ray-error.log;<br><br></code></pre></td></tr></table></figure><p>添加完成后即可启动 Nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start nginx<br>systemctl enable nginx<br><br></code></pre></td></tr></table></figure><p>没有问题的话，这个节点现在就可以用了。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.wenjinyu.me/a-simple-instructions-for-how-to-deploy-v2ray-with-tls-and-ws-mode/">https://www.wenjinyu.me/a-simple-instructions-for-how-to-deploy-v2ray-with-tls-and-ws-mode/</a></p><ul><li><h4 id="Clone-the-repository"><a href="#Clone-the-repository" class="headerlink" title="Clone the repository"></a>Clone the repository</h4><p>Go to the folder where you want to store your project, and clone the new repository:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">~$ git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/konylee/</span>konylee.github.io<br></code></pre></td></tr></table></figure></li><li><h4 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h4><p>Enter the project folder and add an index.html file:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">~$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> konylee.github.io</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">~$ </span><span class="language-bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Hello World&quot;</span> &gt; index.html</span><br></code></pre></td></tr></table></figure></li><li><h4 id="Push-it"><a href="#Push-it" class="headerlink" title="Push it"></a>Push it</h4><p>Add, commit, and push your changes:</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gams">~<span class="hljs-symbol">$</span> git add --<span class="hljs-keyword">all</span><br><br>~<span class="hljs-symbol">$</span> git commit -m <span class="hljs-string">&quot;Initial commit&quot;</span><br><br>~<span class="hljs-symbol">$</span> git push -u origin main<br></code></pre></td></tr></table></figure></li><li><h4 id="…and-you’re-done"><a href="#…and-you’re-done" class="headerlink" title="…and you’re done!"></a>…and you’re done!</h4><p>Fire up a browser and go to <strong><a href="https://konylee.github.io/">https://konylee.github.io</a></strong>.</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/11/22/hello-world/"/>
    <url>/2022/11/22/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
